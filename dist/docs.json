{
  "api": {
    "name": "MParticleCapacitorPlugin",
    "slug": "mparticlecapacitorplugin",
    "docs": "",
    "tags": [],
    "methods": [
      {
        "name": "echo",
        "signature": "(options: { value: string; }) => Promise<{ value: string; }>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ value: string; }"
          }
        ],
        "returns": "Promise<{ value: string; }>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "echo"
      },
      {
        "name": "mParticleInit",
        "signature": "(call: { key: any; production: any; }) => Promise<any>",
        "parameters": [
          {
            "name": "call",
            "docs": "",
            "type": "{ key: any; production: any; }"
          }
        ],
        "returns": "Promise<any>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "mparticleinit"
      },
      {
        "name": "logMParticleEvent",
        "signature": "(call: { eventName: any; eventType: any; eventProperties: any; }) => Promise<any>",
        "parameters": [
          {
            "name": "call",
            "docs": "",
            "type": "{ eventName: any; eventType: any; eventProperties: any; }"
          }
        ],
        "returns": "Promise<any>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "logmparticleevent"
      },
      {
        "name": "logMParticlePageView",
        "signature": "(call: { pageName: any; pageLink: any; }) => Promise<any>",
        "parameters": [
          {
            "name": "call",
            "docs": "",
            "type": "{ pageName: any; pageLink: any; }"
          }
        ],
        "returns": "Promise<any>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "logmparticlepageview"
      },
      {
        "name": "setUserAttribute",
        "signature": "(call: { attributeName: any; attributeValue: any; }) => Promise<any>",
        "parameters": [
          {
            "name": "call",
            "docs": "",
            "type": "{ attributeName: any; attributeValue: any; }"
          }
        ],
        "returns": "Promise<any>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "setuserattribute"
      },
      {
        "name": "setUserAttributeList",
        "signature": "(call: { attributeName: any; attributeValues: any; }) => Promise<any>",
        "parameters": [
          {
            "name": "call",
            "docs": "",
            "type": "{ attributeName: any; attributeValues: any; }"
          }
        ],
        "returns": "Promise<any>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "setuserattributelist"
      },
      {
        "name": "updateMParticleCart",
        "signature": "(call: { productData: any; customAttributes: any; eventType: any; }) => Promise<any>",
        "parameters": [
          {
            "name": "call",
            "docs": "",
            "type": "{ productData: any; customAttributes: any; eventType: any; }"
          }
        ],
        "returns": "Promise<any>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "updatemparticlecart"
      },
      {
        "name": "addMParticleProduct",
        "signature": "(call: { productData: any; customAttributes: any; }) => Promise<any>",
        "parameters": [
          {
            "name": "call",
            "docs": "",
            "type": "{ productData: any; customAttributes: any; }"
          }
        ],
        "returns": "Promise<any>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "addmparticleproduct"
      },
      {
        "name": "removeMParticleProduct",
        "signature": "(call: { productData: any; customAttributes: any; }) => Promise<any>",
        "parameters": [
          {
            "name": "call",
            "docs": "",
            "type": "{ productData: any; customAttributes: any; }"
          }
        ],
        "returns": "Promise<any>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "removemparticleproduct"
      },
      {
        "name": "submitPurchaseEvent",
        "signature": "(call: { productData: any; customAttributes: any; transactionAttributes: any; }) => Promise<any>",
        "parameters": [
          {
            "name": "call",
            "docs": "",
            "type": "{ productData: any; customAttributes: any; transactionAttributes: any; }"
          }
        ],
        "returns": "Promise<any>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "submitpurchaseevent"
      },
      {
        "name": "loginMParticleUser",
        "signature": "(call: { email: any; customerId: any; }) => Promise<any>",
        "parameters": [
          {
            "name": "call",
            "docs": "",
            "type": "{ email: any; customerId: any; }"
          }
        ],
        "returns": "Promise<any>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "loginmparticleuser"
      },
      {
        "name": "logoutMParticleUser",
        "signature": "(call?: any) => Promise<any>",
        "parameters": [
          {
            "name": "call",
            "docs": "",
            "type": "any"
          }
        ],
        "returns": "Promise<any>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "logoutmparticleuser"
      },
      {
        "name": "registerMParticleUser",
        "signature": "(call: { email: any; customerId: any; userAttributes: any; }) => Promise<any>",
        "parameters": [
          {
            "name": "call",
            "docs": "",
            "type": "{ email: any; customerId: any; userAttributes: any; }"
          }
        ],
        "returns": "Promise<any>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "registermparticleuser"
      }
    ],
    "properties": []
  },
  "interfaces": [],
  "enums": []
}